---
source: src/scanner.rs
expression: tokens
---
[
    Token {
        type: Var,
        lexeme: "var",
        literal: None,
        line: 1,
    },
    Token {
        type: Identifier,
        lexeme: "x",
        literal: Some(
            String(
                "x",
            ),
        ),
        line: 1,
    },
    Token {
        type: EqualEqual,
        lexeme: "=",
        literal: None,
        line: 1,
    },
    Token {
        type: Number,
        lexeme: "10",
        literal: Some(
            Number(
                10.0,
            ),
        ),
        line: 1,
    },
    Token {
        type: Semicolon,
        lexeme: ";",
        literal: None,
        line: 1,
    },
    Token {
        type: While,
        lexeme: "while",
        literal: None,
        line: 2,
    },
    Token {
        type: Identifier,
        lexeme: "x",
        literal: Some(
            String(
                "x",
            ),
        ),
        line: 2,
    },
    Token {
        type: Less,
        lexeme: "<=",
        literal: None,
        line: 2,
    },
    Token {
        type: Number,
        lexeme: "20",
        literal: Some(
            Number(
                20.0,
            ),
        ),
        line: 2,
    },
    Token {
        type: LeftBrace,
        lexeme: "{",
        literal: None,
        line: 3,
    },
    Token {
        type: Identifier,
        lexeme: "x",
        literal: Some(
            String(
                "x",
            ),
        ),
        line: 3,
    },
    Token {
        type: Plus,
        lexeme: "+",
        literal: None,
        line: 3,
    },
    Token {
        type: EqualEqual,
        lexeme: "=",
        literal: None,
        line: 3,
    },
    Token {
        type: Number,
        lexeme: "1",
        literal: Some(
            Number(
                1.0,
            ),
        ),
        line: 3,
    },
    Token {
        type: Semicolon,
        lexeme: ";",
        literal: None,
        line: 3,
    },
    Token {
        type: Print,
        lexeme: "print",
        literal: None,
        line: 4,
    },
    Token {
        type: Identifier,
        lexeme: "x",
        literal: Some(
            String(
                "x",
            ),
        ),
        line: 4,
    },
    Token {
        type: Semicolon,
        lexeme: ";",
        literal: None,
        line: 4,
    },
    Token {
        type: RightBrace,
        lexeme: "}",
        literal: None,
        line: 5,
    },
    Token {
        type: Eof,
        lexeme: "}",
        literal: None,
        line: 5,
    },
]
